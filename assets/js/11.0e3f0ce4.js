(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{285:function(t,e,a){"use strict";a.r(e);var r=a(14),n=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"основные-моменты-языка"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#основные-моменты-языка"}},[t._v("#")]),t._v(" Основные моменты языка")]),t._v(" "),e("h2",{attrs:{id:"парадигмы-программирования"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#парадигмы-программирования"}},[t._v("#")]),t._v(" Парадигмы программирования")]),t._v(" "),e("p",[t._v("PHP представляет собой гибкий, динамичный язык, который поддерживает несколько техник программирования. Он значительно развился в течение последних нескольких лет: добавлена мощная объектно-ориентированная модель в PHP 5.0 (2004), анонимные функции (замыкания) и пространства имен в PHP 5.3 (2009), а также трейты в PHP 5.4 (2012).")]),t._v(" "),e("h3",{attrs:{id:"объектно-ориентированное-программирование"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#объектно-ориентированное-программирование"}},[t._v("#")]),t._v(" Объектно-ориентированное программирование")]),t._v(" "),e("p",[t._v("PHP реализует очень большой набор особенностей объектно-ориентированного программирования, включая поддержку классов, абстрактных классов, интерфейсов, наследования, конструкторов, клонирования, исключений и т.д.")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://www.php.net/manual/ru/language.oop5.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее об объектно-ориентированном PHP"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://www.php.net/manual/ru/language.oop5.traits.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о трейтах"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"функциональное-программирование"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#функциональное-программирование"}},[t._v("#")]),t._v(" Функциональное программирование")]),t._v(" "),e("p",[t._v("PHP поддерживает первоклассные функции, т.е. функция может быть применена к переменной. И определенные пользователем, и встроенные функции могут быть применены к переменной и вызываться динамически. Функции могут быть переданы, как аргумент к другой функции (эта особенность называется функцией высшего порядка), а также функция может возвращать другую функцию.")]),t._v(" "),e("p",[t._v("Рекурсия — это особенность, которая позволяет функции вызывать саму себя, это поддерживается языком, но бо́льшая часть кода PHP фокусируется на итерации.")]),t._v(" "),e("p",[t._v("Анонимные функции (замыкания) поддерживаются PHP начиная с версии 5.3 (2009).")]),t._v(" "),e("p",[t._v("В PHP 5.4 добавлена возможность связывать замыкание с областью видимости объекта, а также улучшена поддержка callables (всё, что может быть вызвано), так что они могут быть использованы наравне с анонимными функциями практически во всех случаях.")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://www.php.net/manual/ru/functions.anonymous.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее об Анонимных Функциях"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://php.net/manual/ru/class.closure.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о классе Closure"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://wiki.php.net/rfc/closures",target:"_blank",rel:"noopener noreferrer"}},[t._v("Больше информации в Closures RFC"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://php.net/manual/ru/language.types.callable.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о Callables"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://php.net/manual/ru/function.call-user-func-array.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Узнать о динамически вызываемых функциях с "),e("code",[t._v("call_user_func_array")]),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"meta-programming"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#meta-programming"}},[t._v("#")]),t._v(" Meta Programming")]),t._v(" "),e("p",[t._v("PHP поддерживает несколько форм метапрограммирования, что реализуется с помощью таких механизмов, как Reflection API и Магические Методы. Доступно много Магических Методов, например: "),e("code",[t._v("__get()")]),t._v(", "),e("code",[t._v("__set()")]),t._v(", "),e("code",[t._v("__clone()")]),t._v(", "),e("code",[t._v("__toString()")]),t._v(", "),e("code",[t._v("__invoke()")]),t._v(", и т.д., которые позволяют отслеживать поведение внутри класса. Разработчики Ruby часто говорят, что PHP не хватает "),e("code",[t._v("method_missing")]),t._v(", но он доступен, как "),e("code",[t._v("__call()")]),t._v(" и "),e("code",[t._v("__callStatic()")]),t._v(".")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://php.net/manual/ru/language.oop5.magic.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о Магических Методах"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://www.php.net/manual/ru/intro.reflection.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о Reflection"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"пространства-имен"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#пространства-имен"}},[t._v("#")]),t._v(" Пространства имен")]),t._v(" "),e("p",[t._v("Как было сказано выше, сообщество PHP состоит из множества разработчиков, создающих очень много кода. Это значит, что одна библиотека PHP может иметь такое же название класса, как и другая. Когда обе библиотеки используются в одном пространстве имен, они конфликтуют и возникают проблемы.")]),t._v(" "),e("p",[e("em",[t._v("Пространства имен")]),t._v(" решают эту проблему. Как описано в руководстве PHP, пространства имен можно сравнить с папками операционной системы, которые являются "),e("em",[t._v("пространствами имен")]),t._v(" файлов; два файла с одинаковым именем могут сосуществовать в разных директориях. Подобно этому, два PHP класса с одинаковым названием могут существовать в разных пространствах имен PHP.")]),t._v(" "),e("p",[t._v("Использование пространств имен необходимо для того, чтобы избежать конфликтов при использовании вашего кода с библиотеками других разработчиков.")]),t._v(" "),e("p",[t._v("Один из рекомендуемых способов использования пространств имен описан в "),e("a",{attrs:{href:"https://github.com/getjump/fig-standards/blob/master/accepted/PSR-4-autoloader.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("PSR-4"),e("OutboundLink")],1),t._v(", который призван обеспечить стандарты для описания файлов, классов и пространств имен, что позволяет создавать подключаемый (plug-and-play) код.")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://php.net/manual/ru/language.namespaces.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о пространствах имен"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/getjump/fig-standards/blob/master/accepted/PSR-4-autoloader.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о PSR-4"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"стандартная-библиотека-php-spl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#стандартная-библиотека-php-spl"}},[t._v("#")]),t._v(" Стандартная Библиотека PHP (SPL)")]),t._v(" "),e("p",[t._v("Стандартная библиотека PHP (SPL) поставляется вместе с PHP и предоставляет набор классов и интерфейсов. Она состоит в основном из часто используемых классов структур данных (стек, очередь, куча, и т.д.), а также итераторов, которые предназначены для прохождения через эти структуры данных или ваши собственные классы, которые реализуют интерфейсы SPL.")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://php.net/manual/ru/book.spl.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о SPL"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"интерфеис-команднои-строки"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#интерфеис-команднои-строки"}},[t._v("#")]),t._v(" Интерфейс командной строки")]),t._v(" "),e("p",[t._v("Главная цель, с которой был создан PHP — это разработка веб-приложений, но он также полезен при написания кода для интерфейса командной строки (CLI). PHP программы командной строки могут помочь вам автоматизировать такие общие задачи, как тестирование, развертывание и администрирование приложения.")]),t._v(" "),e("p",[t._v("CLI PHP программы очень мощные, потому что вы можете использовать код вашего приложения напрямую, без нужды в создании и обеспечении безопасности веб-интерфейса (GUI) для него. Только убедитесь, что вы не используете для ваших скриптов (CLI) корень вашего веб-сервера.")]),t._v(" "),e("p",[t._v("Попробуйте запустить PHP из консоли:")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" php "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i\n")])])]),e("p",[t._v("Опция "),e("code",[t._v("-i")]),t._v(" выдаст вам конфигурацию вашего PHP, подобно функции "),e("code",[t._v("phpinfo")]),t._v(".")]),t._v(" "),e("p",[t._v("Опция "),e("code",[t._v("-a")]),t._v(" предоставляет доступ к интерактивной оболочке, подобно ruby IRB или интерактивной оболочки python. Также существует целый ряд других полезных "),e("a",{attrs:{href:"http://www.php.net/manual/ru/features.commandline.options.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("опций командной строки"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Давайте напишем простую «Привет, $name» программу CLI. Чтобы это сделать, создайте файл с именем "),e("code",[t._v("hello.php")]),t._v(", как показано ниже.")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$argc")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Использование: php hello.php [name].\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$argv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Привет, '),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")])]),t._v('\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),e("p",[t._v("PHP устанавливает две специальные переменные, основанных на аргументах, с которыми запущен ваш скрипт. "),e("a",{attrs:{href:"http://php.net/manual/ru/reserved.variables.argc.php",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("$argc")]),e("OutboundLink")],1),t._v(" — это переменная с числовым значением, которая содержит количество переданных аргументов, "),e("a",{attrs:{href:"http://php.net/manual/ru/reserved.variables.argv.php",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("$argv")]),e("OutboundLink")],1),t._v(" — это массив, содержащий значение каждого аргумента. Первый аргумент — всегда название вашего PHP скрипта, в этом случае "),e("code",[t._v("hello.php")]),t._v(".")]),t._v(" "),e("p",[t._v("Выражение "),e("code",[t._v("exit()")]),t._v(" используется с ненулевым числом, чтобы дать оболочке понять, что команда не удалась.\nЧасто используемые коды завершения можно найти "),e("a",{attrs:{href:"http://www.gsp.com/cgi-bin/man.cgi?section=3&topic=sysexits",target:"_blank",rel:"noopener noreferrer"}},[t._v("здесь"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Для запуска сценария, указанного выше, наберите в командной строке:")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" php hello"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("php\nИспользование"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" php hello"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("php "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" php hello"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("php Мир\nПривет"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Мир\n")])])]),e("ul",[e("li",[e("a",{attrs:{href:"http://php.net/manual/ru/features.commandline.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о запуске PHP из командной строки"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://www.php.net/manual/ru/install.windows.commandline.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о настройке Windows для запуска PHP из командной строки"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"xdebug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xdebug"}},[t._v("#")]),t._v(" XDebug")]),t._v(" "),e("p",[t._v("Один из самых полезных инструментов в разработке программного обеспечения — хороший отладчик. Он позволяет вам отследить исполнение вашего кода и контролировать содержимое вашего стека. XDebug — это PHP отладчик, который может использоваться различными IDE, чтобы дать вам возможность устанавливать Брейкпоинты (точки отладки кода) и контролировать стек. Он также позволяет использовать такие инструменты, как PHPUnit и KCacheGrind, для покрытия кода тестами и его профилирования.")]),t._v(" "),e("p",[t._v("Если вы оказываетесь в безвыходном положении при использовании var_dump/print_r, и у вас не получается найти решение, то возможно вам поможет использование отладчика.")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://xdebug.org/docs/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("Установка XDebug"),e("OutboundLink")],1),t._v(" может оказаться сложной, но одна из самых полезных его функций это «Удаленная отладка» — если вы разрабатываете код локально и затем тестируете его в локальной машине или на другом сервере, Удаленная Отладка — это возможность, которую вы захотите сразу же включить.")]),t._v(" "),e("p",[t._v("Стандартно, вы отредактируете ваш Apache VHost или .htaccess файл со следующими значениями:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("php_value xdebug.remote_host=192.168.?.?\nphp_value xdebug.remote_port=9000\n")])])]),e("p",[t._v('"remote_host" и "remote_port" будут указывать на ваш локальный компьютер и порт, который вы указали в вашей IDE для прослушивания. Дальше достаточно включить режим «ожидания соединений» в вашей IDE, и загрузить URL:')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("http://your-website.example.com/index.php?XDEBUG_SESSION_START=1\n")])])]),e("p",[t._v("Ваша IDE теперь будет перехватывать текущее состояние, позволяя вам устанавливать брейкпоинты и исследовать значения в памяти по мере выполнения скрипта.")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://xdebug.org/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Подробнее о XDebug"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);